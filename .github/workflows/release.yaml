name: Build all subject PDFs and release them

on:
  push:
    branches:
      - main
    paths:
      - "**/*.tex"
  workflow_dispatch:

jobs:
  listOfDirectories: 
    runs-on: ubuntu-latest
    
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Prepare list of directories for jobs
        id: set-dirs
        run: echo "::set-output name=dir::$(ls -d */ | sed "s/template\///" | sed "/^$/d" |
         tr -dc '[:alnum:]\n\r-' | jq -R -s -c 'split("\n")[:-1]')"
  
  subjects:
    runs-on: ubuntu-latest
    needs: listOfDirectories

    strategy:
      matrix:
        dir: ${{ fromJson(needs.listOfDirectories.outputs.dir) }} 

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4

      - name: Build ${{ matrix.dir }}
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: ${{ matrix.dir }}
          root_file: main.tex
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.dir }}
          path: ${{ matrix.dir }}/main.pdf

  release:
    runs-on: ubuntu-latest
    needs: subjects

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Set up Git repository
      uses: actions/checkout@v4

    - name: Create tag
      id: create_tag
      run: |
        tag=build-$(date +%Y%m%d-%H%M%S)
        echo "::set-output name=tag::$tag"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        release_name: ${{ steps.create_tag.outputs.tag }}
        draft: false
        prerelease: false

  addSubjects:
    runs-on: ubuntu-latest
    needs: [ release, listOfDirectories ]

    strategy:
      matrix:
        dir: ${{ fromJson(needs.listOfDirectories.outputs.dir) }}
  
    steps:
    - uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.dir }}
        path: ${{ matrix.dir }}

    - name: Upload artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./${{ matrix.dir }}/main.pdf
        asset_name: ${{ matrix.dir }}.pdf
        asset_content_type: application/pdf
